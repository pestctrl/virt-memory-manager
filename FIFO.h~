#include "IReplacementAlgorithm.h"

class FIFO : public IReplacementAlgorithm {
 public:
  int nextSpot;
  FIFO(int pages, int id, int shmid);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};

class LIFO : public IReplacementAlgorithm {
 public:
  int max;
  LIFO(int pages, int id, int shmid);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};

class LRUX : public IReplacementAlgorithm {
 public:
  LRUX(int pages, int id, int shmid, int x);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};

class LDF : public IReplacementAlgorithm {
 public:
  LDF(int pages, int id, int shmid);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};

class OPTX : public IReplacementAlgorithm {
 public:
  OPTX(int pages, int id, int shmid, int x);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};

class WS : public IReplacementAlgorithm {
 public:
  WS(int pages, int id, int shmid, int min, int max);
  virtual void access(int virt, int segBits, int pageBits, int offBits);
};
